spring:
  application:
    name: newsum-be

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

  config:
    import: optional:file:.env[.properties]
    activate:
      on-profile: local  # ✅ 여기도 합침

  datasource:
    url: ${DB_URL}
    driverClassName: ${DB_DRIVER}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

  kafka: # ✅ 올바른 위치
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:newsum-like-consumer}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  jpa:
    hibernate:
      ddl-auto: validate  # ✅ local에서 validate
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_batch_fetch_size: 100

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  packages-to-scan: com.akatsuki.newsum
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui.disable-swagger-default-url: true

decorator:
  datasource:
    p6spy:
      enable-logging: true
      multiline: true
      logging: slf4j

user:
  default-profile-image-url: ${USER_DEFAULT_PROFILE_IMAGE_URL}

ai-server:
  base-url: ${AI_SERVER_BASE_URL}

jwt:
  secret: ${JWT_SECRET_KEY}
  access-token:
    expiration: ${JWT_ACCESS_TOKEN_EXPIRE}
  refresh-token:
    expiration: ${JWT_REFRESH_TOKEN_EXPIRE}

oauth2:
  kakao:
    client-id: ${KAKAO_CLIENT_ID}
    redirect-uri: ${KAKAO_REDIRECT_URI}
  google:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    redirect-uri: ${GOOGLE_REDIRECT_URI}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
    endpoint:
      prometheus:
        enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true

logging:
  level:
    org:
      apache:
        coyote:
          http11: trace
    com.akatsuki.newsum: debug
