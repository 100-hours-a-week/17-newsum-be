name: Backend Dev Docker CD

on:
  push:
    branches: [ dev ]
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'

jobs:
  build-and-deploy:
    runs-on: [ self-hosted, linux, X64 ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR
        run: |
          ./gradlew clean build -x test
          cp build/libs/newsum-0.0.1-SNAPSHOT.jar app.jar

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ap-northeast-2

      - name: Docker ECR Login
        run: |
          aws ecr get-login-password --region ap-northeast-2 \
          | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      # arm 아키텍처로 이미지 빌드
      - name: Build & Push ARM image with tag `dev`
        run: |
          IMAGE="${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO }}:dev"
          sudo docker buildx use multi-arch || docker buildx create --name multi-arch --use --driver docker-container --bootstrap
          sudo docker buildx build \
            --platform linux/arm64 \
            --tag "$IMAGE" \
            --push \
            .
      # 태그로 인스턴스 IP 가져오기
      - name: Get EC2 Private IPs by Tag
        id: fetch
        run: |
          IPS=$(aws ec2 describe-instances \
            --filters "Name=tag:Role,Values=newsum-backend" \
                      "Name=tag:Environment,Values=dev" \
                      "Name=instance-state-name,Values=running" \
            --query 'Reservations[*].Instances[*].PrivateIpAddress' \
            --output text)
          echo "ips=$IPS" >> "$GITHUB_OUTPUT"

      - name: Deploy to WAS EC2 via SSH
        run: |
          for IP in ${{ steps.fetch.outputs.ips }}; do
            echo "🚀 배포 중: $IP"

            # Self-hosted-runner 내부 키 경로
            ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY_PATH }} ubuntu@$IP << 'EOF'
              # ECR 로그인
              aws ecr get-login-password --region ap-northeast-2 \
              | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

              # .env 생성
              curl -Ls https://${{ secrets.AWS_CLOUDFRONT_URL }}/tools/infisical-linux-arm64 -o infisical
              chmod +x infisical && sudo mv infisical /usr/local/bin/infisical
              infisical export \
                --env=${{ secrets.INFISICAL_ENV_DEV }} \
                --projectId=${{ secrets.INFISICAL_PROJECT_ID }} \
                --token=${{ secrets.INFISICAL_TOKEN_DEV }} \
                --format=dotenv \
                --domain=${{ secrets.INFISICAL_API_URL }} > /home/ubuntu/newsum-backend.env

              # 기존 컨테이너 중지 및 제거
              docker stop newsum_backend || true
              docker rm newsum_backend || true

              # 최신 이미지 pull 및 실행
              docker pull ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO }}:dev
              docker run -d \
                --name newsum_backend \
                --restart=always \
                --env-file /home/ubuntu/newsum-backend.env \
                -p 8080:8080 \
                ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO }}:dev
          
              # 🔐 환경변수 파일 삭제
              rm -f /home/ubuntu/newsum-backend.env
            EOF
          done
