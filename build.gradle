plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.12'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '9.22.3'
    id 'org.ec4j.editorconfig' version '0.0.3'
    id 'java-test-fixtures' // test fixture 를 사용하기 위한 플러그인 추가
}

group = 'com.akatsuki'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation platform('org.springframework.cloud:spring-cloud-dependencies:2023.0.5')
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.kafka:spring-kafka'

    //prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //resilience4j
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'

    // QueryDSL 라이브러리 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //hibernate
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'

    // Database
    runtimeOnly 'org.postgresql:postgresql:42.6.0'

    // P6Spy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'

    // Flyway
    implementation 'org.flywaydb:flyway-core:9.22.3'

    // Caffeine Cache
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Swagger/OpenAPI Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Utility
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
    testImplementation 'org.assertj:assertj-core:3.25.3'

    testImplementation 'io.rest-assured:rest-assured:5.3.2'
    testImplementation 'org.testcontainers:testcontainers:1.21.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.21.0'
    testImplementation "org.testcontainers:postgresql:1.21.0"
    testImplementation "com.redis:testcontainers-redis:2.2.2"

    // WireMock for OpenFeign testing
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
}

editorconfig {
    excludes = ['build']
}

// Querydsl 빌드 옵션 설정
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}
test {
    useJUnitPlatform()
}
